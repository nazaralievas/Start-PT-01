# разбор домашнего задания. Нужно было написать программу, которая запрашивает
# у пользователя радиус круга и возвращает площадь этого круга
# вспомним формулу определения площади круга: S = pi * r ** 2

print('Введите радиус круга:')
radius = input() # введённое число сохраним в переменной radius
# так как функция input() всё превращает в строку, нам нужно всё превратить обратно в числа с помощью функции int()
radius = int(radius)
s = 3.14 * radius ** 2 # высчитаем площать круга и сохраним результат в переменную s (** означает возведение в квадрат)
print(f'Площадь круга с радиусом {radius} равна {s}') # с помощью форматирования строк выведем ответ


# приветственное сообщение можно писать прямо внутри скобок функции input()
# функцию input() можно обернуть в функцию int() чтобы все вводимые данные сразу переводить в числа
# итого со всеми сокращениями решение задачи можно уместить в 3 строки кода:
radius = int(input('Введите радиус круга: '))
s = 3.14 * radius ** 2
print(f'Площадь круга с радиусом {radius} = {s}')


# на уроке мы решали похожую задачу с определением площади треугольника
# из геометрии вспоминаем формулу: S = 0.5 * h * b (h - высота, b - длина основания)
h = int(input('Введите высоту треугольника: '))
b = int(input('Введите длину основания треугольника: '))
s = 0.5 * h * b
print(f'Площадь треугольника с высотой {h} и длиной основания {b} равна {s}')

# однако, что случится, если пользователь введёт дробное число типа 2.5
# функция int() просто уберёт дробную часть и из 2.5 мы получим 2
# чтобы такого не было мы будем использовать функцию float()
# которая превращает введённые данные не в целые числа, а в дробные
# а если пользователь введёт целое число 4, то функция превратит её в дробное 4.0 (а это не так страшно)
h = float(input('Введите высоту треугольника: '))
b = float(input('Введите длину основания треугольника: '))
s = 0.5 * h * b
print(f'Площадь треугольника с высотой {h} и длиной основания {b} равна {s}')


# рассмотрим арифметические операторы
# сложение +, вычитание -, деление /, умнжение * вы знаете)
# возведение в степень мы разобрали (две звёздочки)
print(5 ** 2) # 5 в квадрате, то есть 5 * 5
print(10 ** 3) # 10 в третьей степени, то есть 10 * 10 * 10

# рассмотрим незнакомые операторы:
# деление нацело (обозначается вот так //)
# 13 яблок нужно разделить на 10 человек. Сколько целых яблок достанется каждому?
print(13 // 10) # ответ 1 (по одному яблоку на каждого)

# а остаток от деления (обозначается вот так %) поможет узнать
# сколько яблок останется при делении 13 яблок на 10 человек
print(13 % 10) # ответ 3


# какой остаток при делении чётного числа на 2? правильно ноль
print(12 % 2) # ответ 0, так как 12 делится на 2 без остатка

# а делится ли число 56904567 на 9 без остатка?
# спросим с помощью кода "остаток от деления числа 56904567 на 9 равняется нулю?"
print(56904567 % 9 == 0) # питон ответил False, что на человеческом означает Нет

# давайте спросим делится ли число 12 на 3, 4 и 6 без остатка?
# это возможно сделать с помощью ЛОГИЧЕСКОГО ОПЕРАТОРА and
print(12 % 3 == 0 and 12 % 4 == 0 and 12 % 6 == 0) # ответ True

# а с помощью ЛОГИЧЕСКОГО ОПЕРАТОРА or можно узнать,
# делится ли число 21 на 7 ИЛИ на 5 без остатка:
print(21 % 7 == 0 or 21 % 5 == 0)
# ответ True потому что 21 делится на 7 без остатка


# ещё одна мини-тема СОКРАЩЕННЫЕ ОПЕРАТОРЫ
# нам подарили копилку. Она новая и в ней пока  что ноль сом:
kopilka = 0

# нам подарили 1000 сом
dengi = 1000

# кладём деньги в копилку
kopilka = kopilka + dengi
# то есть теперь в переменной kopilka у нас то, что было в копилке + то, что в переменной dengi

print(kopilka) # 1000

# эту запись
kopilka = kopilka + dengi
# можно сократить вот так:
kopilka += dengi

# а если мы взяли из копилки 500 сом:
kopilka = kopilka - 500
# можно сокращенно записать вот так:
kopilka -= 500

# на уроке решали задачу:
# у пользователя в копилке 0 сомов
# с помощью трёх функций input() он может пополнить копилку 3 раза
# в конце нужно вывести накопленную сумму денег

# сначала рассмотрим вариант, который кажется нам рабочим:
kopilka = 0
dengi = int(input('Введите сумму: '))
dengi = int(input('Введите сумму: '))
dengi = int(input('Введите сумму: '))
kopilka = dengi + dengi + dengi
print(f'У вас на счету: {kopilka} сом')

# в этом случае переменная dengi будет хранить информацию только из последнего инпута

# давайте исправим: теперь информацию из каждого инпута сохраним в разных переменных:
kopilka = 0
dengi1 = int(input('Введите сумму: '))
dengi2 = int(input('Введите сумму: '))
dengi3 = int(input('Введите сумму: '))
kopilka = dengi1 + dengi2 + dengi3


# одну и ту же переменную dengi можно использовать,
# если вы каждый раз его используете перед новым инпутом. Вот так:
kopilka = 0
dengi = int(input('Введите сумму: '))
kopilka += dengi

dengi = int(input('Введите сумму: '))
kopilka += dengi

dengi = int(input('Введите сумму: '))
kopilka -= dengi
print(f'У вас на счету: {kopilka} сом')


# мини-тема: функция type()
# которая помогает нам определить тип данных
# мы с вами прошли 4 типа данных:
# строки - string
# целые числа - integer
# дробные числа - float
# булевый тип данных -boolean (True, False)

# есть функции, которые превращают данные в другой тип данных
# например, превратим число 3.14 в целое число, в дробное и в строку:
num = 3.14
a = int(num) # в целое число
b = float(num) # в дробное число
c = str(num) # и в строку

# а как узнать действительно ли превращение сработало? Для проверки есть функция type()
# с помощью которой мы можем определить тип данных
print(type(a)) # в терминале увидим <class 'int'>
print(type(b)) # в терминале увидим <class 'float'>
print(type(c)) # в терминале увидим <class 'str'>

# можно спрашивать у компьютера "тип данных переменной 'c' является строка?"
print(type(c) == str) # True (да, это строка)

# с помощью знака "не равно" != можно спрашивать
# "тип данных переменной 'c' не является целое число?"
print(type(c) != int) # True (нет, это не число)
