# разбор домашки:
# students = ["Каныметов", "Акназарова", "Соловарев", "Абдуллаев", "Акимбаев", "Кубатбеков"]
# В прошлой домашке вам нужно было вывести фамилии, которые начинаются на А.
# Теперь вам нужно вывести не сами фамилии, а индексы фамилий, которые начинаются на А.
# То есть вывод у вас будет вот такой:
# 1
# 3
# 4
students = ["Каныметов", "Акназарова", "Соловарев", "Абдуллаев", "Акимбаев", "Кубатбеков"]
for s in students:
    if s[0] == "А":
        print(students.index(s))


# методы удаления элемента из списка:
students = ["Каныметов", "Акназарова", "Соловарев", "Абдуллаев", "Акимбаев", "Кубатбеков"]
students.remove("Каныметов") # передаём значение элемента
print(students) # ['Акназарова', 'Соловарев', 'Абдуллаев', 'Акимбаев', 'Кубатбеков']

students.pop(4) # передаём индекс
print(students) # ['Акназарова', 'Соловарев', 'Абдуллаев', 'Акимбаев']

students.pop() # не передаём ничего - удаляется последний элемент
print(students) # ['Акназарова', 'Соловарев', 'Абдуллаев']

# 
# min max sort
students = ["Каныметов", "Акназарова", "Соловарев", "Абдуллаев", "Акимбаев", "Кубатбеков"]
students.sort()
print(students) # ['Абдуллаев', 'Акимбаев', 'Акназарова', 'Каныметов', 'Кубатбеков', 'Соловарев']

nums = [100, 13, 43, 5, 7]
nums.sort()
print(nums) # [5, 7, 13, 43, 100]


# задание: удалите два наибольших числа из списка nums
nums = [100, 13, 43, 5, 7]
nums.sort()
print(nums) # [5, 7, 13, 43, 100]
nums.pop() # сначала удалится последний элемент - 100 и в списке останутся [5, 7, 13, 43]
nums.pop() # удалится последний элемент 43
print(nums) # [5, 7, 13]


# обратная сортировка
nums = [100, 13, 43, 5, 7]
nums.sort(reverse=True)
print(nums) # [100, 43, 13, 7, 5]


# нахождение максимального и минимального значения с помощью функций max и min
nums = [100, 13, 43, 5, 7]
print(max(nums)) # 100
print(min(nums)) # 5


# задание: удалите максимальный и минимальный элемент из списка
nums = [100, 13, 43, 5, 7]
nums.remove(max(nums))
nums.remove(min(nums))


# сумма значений в списке с помощью функции sum
nums = [100, 13, 43, 5, 7]
print(sum(nums)) # 168


# подсчёт количчества вхождений элемента
nums = [100, 13, 43, 100, 5, 7, 100]
print(nums.count(100)) # 3
# потому что число 100 встречается в списке nums 3 раза

# считаем за кого из кандидатов больше всего голосов:
lst = ["Trump", "Biden", "Trump", "Biden", "Trump", "Trump", "Bush"]
print(lst.count("Trump"))
print(lst.count("Biden"))
print(lst.count("Bush"))


# удаляем из списка дубликаты (повторения)
lst = ["Trump", "Biden", "Trump", "Biden", "Trump", "Trump", "Bush"]
candidates = []
for c in lst:
    if c in candidates: # если такой элемент уже есть в списке candidates
        continue # переходим к следующему элементу списка lst
    else: # иначе
        candidates.append(c) # добавляем этот элемент в список candidates

print(candidates) # ['Trump', 'Biden', 'Bush']


# задание - в список lishnee соберите продукты, которых не было в списке mama
mama = ["хлеб", "масло", "мука"]
ya = ["мука", "чипсы", "кола", "хлеб"]
lishnee = []

for product in ya:
    if product in mama:
        continue
    else:
        lishnee.append(product)

print(lishnee) # ['чипсы', 'кола']


# срезы - то есть часть списка. указываем от какого до какого индекса мы хотим взять кусок списка
#         0       1        2       3       4
lst = ["хлеб", "масло", "мука", "кола", "мыло"]
print(lst[0:3]) # ['хлеб', 'масло', 'мука']
print(lst[2:5]) # ['мука', 'кола', 'мыло']
print(lst[0:5:2]) # ['хлеб', 'мука', 'мыло']
print(lst[:]) # ['хлеб', 'масло', 'мука', 'кола', 'мыло'] копия списка

# можно взять срез списка в обратном направлении:
print(lst[::-1]) # ['мыло', 'кола', 'мука', 'масло', 'хлеб']


# если мы хотим взять весь список целиком, то указываем в скобках [:]
lst = ["хлеб", "масло", "мука", "кола", "мыло"]
lst_copy = lst[:]
# теперь если мы вносим изменения в lst_copy, изменения не коснутся основного списка lst
lst_copy.sort()
print(lst_copy) # ['кола', 'масло', 'мука', 'мыло', 'хлеб'] тут элементы отсортировались
print(lst) # ["хлеб", "масло", "мука", "кола", "мыло"] но основной список не изменился


# нельзя копировать списки вот так:
lst = ["хлеб", "масло", "мука", "кола", "мыло"]
lst_copy = lst
# потому что они оба будут ссылкаться на один и тот же список (на один и тот же участок памяти)
# это можно подтвердить проверкой id этих переменных:
print(id(lst_copy)) # 3002915639936
print(id(lst)) # 3002915639936

# с помощью срезов можно получать не только куски списков, но и куски строк:
slovo = 'Python'
print(slovo[2:]) # thon

# и брать срез строки в обратном направлении (помните задачу про палиндром?)
print(slovo[::-1]) # nohtyP


# с помощью срезов можно поменять значение элементов определённого среза
# поменяем значение элементов с 3 до конца на 300
codcoins = [500, 500, 500, 100, 100, 100, 100]
codcoins[3:] = [300, 300, 300, 300]

print(codcoins) # [500, 500, 500, 300, 300, 300, 300]