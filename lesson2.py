# переменные нужны для хранения информации
# в переменной text сохраним текст (поэтому мы и назвали эту переменную text)
text = 'Hello world!'

# и теперь мы можем использовать эту переменную, например ghbynfyenm
print(text)

# или применить к этой переменной конкатенацию (склеивание строк), потому что в этой переменной хранится строка
print(text + ' This is another text.')
# в терминале увидим текст: Hello world! This is another text.

# склеивать можно только строки со строками
# если вы попробуете склеить строки с числами, то получите ошибку:
print(text + 100)


# но умножать строку можно:
print(text * 9)
# в терминале увидим вот это:
# Hello world!Hello world!Hello world!Hello world!Hello world!Hello world!Hello world!Hello world!Hello world!


# называть переменные нужно осмысленно
# переменную для хранения имени студента называем соответственно name
name = 'Tom'

# год рождения в переменную year_of_birth
year_of_birth = 1994

# информацию о том, заплатил ли студент за курс можно сохранить в переменной is_paid
# и тут мы познакомимся с новым типом данных: булевый тип данных, который имеет два вида: True и False (ДА и НЕТ)
is_paid = True # да, студент заплатил за курс

# в переменной is_married буде хранить информацию женат ли студент
is_married = False # нет, не женат

# в переменной gpa хранится информация о среднем балле студента
# и тут мы используем тип данных float - дробное число (по функционалу особо ничем не отличается от целых чисел)
gpa = 4.6


# как вы заметили, переменные нужно писать с маленькой буквы и нельзя использовать символы типа # @ + или _ в начале переменной
# на эту тему на уроке мы решали такую задачу:
# исправьте названия переменных
# вставьте эти переменные в нужные места
# чтобы получился текст:
# Меня зовут Катя. Мой любимый цвет: Зелёный. Мой любимый вид спорта: Бег.

_name = 'Катя'
my color& = 'Зелёный'
@sport = 'Бег'

# давайте исправим переменные
# уберём лишние символы и вставим нужные _
name = 'Катя'
my_color = 'Зелёный'
sport = 'Бег'

# теперь составим предложение склеивая строки и переменные с помощью +
print('Меня зовут ' + name + '. Мой любимый цвет: ' + my_color + '. Мой любимый вид спорта: ' + sport + '.')

# как вы видите, пользоваться конкатенацией бывает неудобно
# для удобной вставки переменных в строку используют форматирование строк
# сегодня мы научимся одному способу форматирования, который называется f-string
print(f'Меня зовут {name}. Мой любимый цвет: {my_color}. Мой спорт: {sport}.')
# это удобно, так как всё пишется внутри одних кавычек и удобнее расставлять пробелы и запятые


student1 = "Roma"
student2 = "Nick"
student3 = "Tom"
# если нам нужно создать несколько переменных как в примере сверху, мы можем воспользоваться множественным присвоением:
student1, student2, student3 = "Roma", "Nick", "Tom"

# благодаря такой записи можно решить загадку:
# в одном стакане молоко, а во втором чай. Как сделать так, чтобы в первом стакане оказался чай, а во втором молоко
stakan1 = 'moloko'
stakan2 = 'chai'

# вот решение:
stakan1, stakan2 = stakan2, stakan1
# мы просто пишем, что теперь в стакане1 находится то, что находилось в стакане2 и наоборот


# давайте теперь познакомимся с функцией input()
# эта функция позволяет вводить данные в терминале
# давайте напишем программу, которая принимает от пользователя сумму в долларах
# и возвращает сколько это будет в сомах

# напишем текст, чтобы пользователю было понятно что вводить:
print('Введите сумму в долларах:')

# теперь в переменной dollar сохраним то, что введёт пользователь
dollar = input()

# что нужно сделать чтобы доллары перевести в сомы? умножить сумму долларов на 87
print(dollar * 87)

# но этот код выведет нам не результат умножения чисел, а 2302302302302302302302302302302302302302302302302302302302302302302302302302302302302
# то есть он умножил введённое число как будто это строка
# так происходит потому что функция input() все введённые данные превращает в строки

# чтобы превратить всё в числа нам понадобится функция int()
print('Введите сумму в долларах:')
dollar = input()
# используем функцию int() чтобы превратить то, что ввёл пользователь в числа:
dollar = int(dollar)

# теперь в переменной dollar хранится число и мы можем её умножить на 87
print(dollar * 87)
