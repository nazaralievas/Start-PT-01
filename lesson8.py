# разберём домашку:
# У пользователя на мбанке 5000 сомов.
# Пока на счету есть деньги, программа запрашивает у пользователя сумму, которую он хочет снять.
# Как только все деньги потрачены, выводится сообщение "На счету не осталось денег".
# Обратите внимание, что он не может снять больше денег, чем у него есть на счету.

# только давайте расширим функционал и добавим возможность завершить программу когда
# пользователь вводит ноль
# для этого используем оператор break, который завершает цикл
mbank = 5000
while mbank > 0:
    snyat = int(input('Какую сумму хотите снять? '))
    if snyat == 0:
        print('Операция завершена...')
        break
    elif snyat > mbank:
        print('Недостаточно средств.')
    else:
        mbank = mbank - snyat
        print(f'Вы сняли сом: {snyat}, у вас осталось: {mbank}')
else: # else тут выполняет ту же функцию, что и в if. Если в переменной mbank число не больше нуля, то выводится:
    print("Денег не осталось...")


# давайте познакомимся с циклом for, которая часто ипользуется в паре с функцией range()
# выводить числа от 1 до 10 с помощью цикла while мы уже умеем
# мы задавали начальную точку num = 1 и каждый раз прибавляем по 1 пока не дойдём до 10

# это прибавление по 1 в цикле for уже реализовано
# поэтому для вывода чисел от 1 до 10 нам достаточно написать:
for i in range(10):
    print(i)

# но в терминале мы увидим:
# 0
# 1
# 2
# 3
# 4
# 5
# 6
# 7
# 8
# 9
# мы видим что отсчёт идёт с нуля (чаще всего в программировании отсчёт идёт с нуля)
# а так же то, что вывелись числа ДО 10 не включительно
# чтобы 10 тоже выводилась, нужно написать число на 1 больше 10:
for i in range(11):
    print(i)

# в терминале увидим:
0
1
2
3
4
5
6
7
8
9
10

# задача №1
# Напишите программу, которая запрашивает число у пользователя и
# выводит числа от 0 до этого числа включительно.
# Если пользователь ввёл число 4
# нужно вывести:
# 0
# 1
# 2
# 3
# 4
user_num = int(input('Введите число: '))
for num in range(user_num + 1): # конечной точкой указываем число на 1 больше того, что ввёл пользователь
    print(num)


# в функцию range() можно задавать не только конечную, но и стартовую точку
# например, давайте выведем числа от 1 до 5
for i in range(1, 6):
    print(i)
# в терминале увидим:
# 1
# 2
# 3
# 4
# 5


# задача №2
# Программа запрашивает у пользователя 2 числа и выводит квадраты чисел в этом диапозоне.
# Если пользователь вводит 1 и 4
# Ваша программа выводит:
# 1
# 4
# 9
# 16
start = int(input('С какого числа: '))
end = int(input('До какого?: '))

for num in range(start, end + 1):
    print(num ** 2)

# но что случится, если пользователь перепутает и введёт сначала бОльшее число, а потом меньшее?
# давайте в таком случае поменяем числа местами с помощью множественного присваивания
# (помните мы решали задачи с двум стаканами:
# в первом стакане молоко, а во втором чай. нужно поменять местами напитки без использования третьего стакана
# в питоне это можно осуществить таким образом:
stakan1 = 'moloko'
stakan2 = 'chai'

stakan1, stakan2 = stakan2, stakan1
# мы просто пишем, что теперь в стакане1 находится то, что находилось в стакане2 и наоборот

# и в итоге решение задачи выглядит так: запрашиваем у пользователя числа
start = int(input('С какого числа: '))
end = int(input('До какого?: '))

# если сначала он ввёл бОльшее число, то меняем местами значения переменных:
if start > end:
    start, end = end, start

for num in range(start, end + 1):
    print(num ** 2)


# в функцию range() можно передать не только начало и конец, но и ШАГ
# выведем числа от 1 до 10, но не все числа, а только каждое второе:
for i in range(1, 10, 2):
    print(i)

# в терминале увидим:
# 1
# 3
# 5
# 7
# 9
# то есть вывелось первое число 1, затем программа сделала 2 шага и вывело число 3, затем еще 2 шага и вывело 5 и так далее


# задача №3
# Пользователь вводит число, например 5
# Выведите вот такой треугольник из звёздочек, в котором последний ряд состоит из 5 звёздочек:
# *
# **
# ***
# ****
# *****
num = int(input('Введите число: '))
for i in range(1, num + 1):
    print(i * '*')


# выводить числа на возрастание мы научились, но как выводить числа на убывание?
# для этого мы можем задать начало и конец и указать ШАГ -1, который и выведет числа по убыванию
# например, выведем числа от 5 до 1 
for i in range(5, 1, -1):
    print(i)
# в терминале увидим:
# 5
# 4
# 3
# 2
# не хватает 1
# тут, как и в отсчёте на возрастание, конечную точку нужно указывать на 1 дальше:
for i in range(5, 0, -1):
    print(i)
# и вот теперь вывод будет правильным:
# 5
# 4
# 3
# 2
# 1


# научились выводить числа на убывание
# давайте дорисуем треугольник из звёздочек
# теперь если пользователь вводит 5, то нужно нарисовать такой треугольник высотой 5 звёздочек:
# *
# **
# ***
# ****
# *****
# ****
# ***
# **
# *

num = int(input('Введите число: '))
for i in range(1, num + 1):
    print(i * '*')

for i in range(num, 0, -1):
    print(i * '*')
# такое решение кажется правильным, но когда я ввожу 5, то выводится вот это:
# *
# **
# ***
# ****
# *****
# *****
# ****
# ***
# **
# *
# давайте нижнюю часть начнём рисовать не с введённого числа, а с числа на 1 меньше то есть num - 1
# и итоговое решение будет выглядеть вот так:
num = int(input('Введите число: '))
for i in range(1, num + 1):
    print(i * '*')

for i in range(num - 1, 0, -1):
    print(i * '*')