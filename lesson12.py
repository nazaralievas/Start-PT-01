# разберём домашку:
# Напишите функцию average,
# которая принимает три числа и возвращает среднее значение этих чисел.
def average(a, b, c):
    result = (a + b + c) / 3
    return result

print(average(1, 7, 3)) # (2 + 7 + 3) / 3 = 4

# что если мы захотим создать функцию, которая принимает 6 чисел и возвращает среднее?
# эта функция принималаа бы 5 аргументов a, b, c, d, e, f
# но это не очень удобно
# для таких случаев мы можем использовать НЕИМЕНОВАННЫЕ АРГУМЕНТЫ - args
# по неименованным аргументам можно проходиться циклом for

# рассмотрим работу цикла for по списку произвольных чисел:
for num in 13, 122, 19, 5:
    print(num)

# в консоли увидим:
13
122
19
5


# когда мы пишем args мы даём понять функции, что мы передадим какое-то количество аргументов
def get_average(*args):
    summa = 0 # сюда складываем числа
    kolich = 0 # тут считаем количество чисел
    for num in args: # и по этим аргументам можем пройтись циклом for
        summa += num
        kolich += 1
    
    return summa / kolich # возвращаем среднее делением суммы чисел на их количество


# теперь мы можем передавать функции get_average люббое количество аргументов:
print(get_average(5, 7)) # хоть два
print(get_average(12, 10, 56, 11, 900, 21)) # хоть шесть


# задание №1
# Написать функцию, которая принимает любое количество аргументов - чисел
# и возвращает среднее арифметическое чётных чисел
def get_average(*args):
    summa = 0
    kolich = 0
    for num in args:
        if num % 2 == 0:
            summa += num
            kolich += 1

    return summa / kolich

print(get_average(10, 10, 10, 13, 11, 15)) # 10


# задание №2
# Написать функцию, которая принимает любое количество аргументов (чисел)
# и возвращает количество чётных чисел
def count_even(*args):
    chetnye = 0
    for num in args:
        if num % 2 == 0:
            chetnye += 1
    return chetnye

# результат функции можно сохранять в переменную:
a = count_even(1, 10, 4)
print(a) # 2
# то есть эту переменную а можно умножать, складывать и тд.:
print(a + 1000) # 1002


# поэтому результат одной функции можно использовать в другой функции:
# мы писали функцию, которая принимает 2 числа и возвращает бОльшее
# если числа равны, то возвращает любое из чисел
def max_of_two(a, b):
    if a > b:
        return a
    else:
        return b

print(max_of_two(7, 1)) # 1


# напишем функцию, которая принимает 3 числа и возвращает бОльшее
def max_of_three(a, b, c):
    max_ab = max_of_two(a, b) # для этого с помощью функции max_of_two найдём большее из первых двух чисел и сохраним его в переменной max_ab
    max_abc = max_of_two(max_ab, c) # затем с помощью той же функции max_of_two найдём бОльшее из max_ab и c
    return max_abc # и возвращаем его

print(max_of_three(1, 5, 10)) # 10


# задание №3

# по той же логике напишем функцию, которая принимает 3 числа и возвращает меньшее
def min_of_two(a, b):
    if a < b:
        return a
    else:
        return b

def min_of_three(a, b, c):
    min_ab = min_of_two(a, b)
    min_abc = min_of_two(min_ab, c)
    return min_abc



# напишем функцию, которая не принимает аргументов
# и при запуске которой выводятся приветственное меню с вариантами действий
# и запрашивается число действия
def main():
    print('Нажмите 1 для операции сложения.')
    print('Нажмите 2 для операции вычитания.')
    choise = input('Введите номер действия: ')
    if choise == '1': # если пользователь ввёл 1
        add() # то запускаем функцию, которая запрашивает 2 числа и складывает их
    elif choise == '2': # если пользователь ввёл 2
        substract() # то запускаем функцию, которая запрашивает 2 числа и вычитает второе из первого
    else: # при вводе чего-либо кроме 1 и 2
        main() # вызывается функция main(), то есть пользователь вновь увидит приветственное меню


def add():
    a = int(input('Введите первое число: '))
    b = int(input('Введите второе число: '))
    print('Результат: ', a + b)
    main() # вызовем функцию main после завершения работы функции add

def substract():
    a = int(input('Введите первое число: '))
    b = int(input('Введите второе число: '))
    print('Результат: ', a - b)
    main() # вызовем функцию main после завершения работы функции substract

main() # вызов функции без аргументов и print